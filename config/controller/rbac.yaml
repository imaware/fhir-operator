apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test
spec:
  bindings:
    - members:
        - >-
          serviceAccount:imaware-test.svc.id.goog[ethan-test/fhir-manager]
      role: roles/iam.workloadIdentityUser
  resourceRef:
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    name: fhir-manager
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test
spec:
  member: 'serviceAccount:fhir-manager@imaware-test.iam.gserviceaccount.com'
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    external: projects/imaware-test
    kind: Project
  role: roles/healthcare.fhirStoreAdmin
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  annotations:
    cnrm.cloud.google.com/project-id: imaware-test
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test
spec:
  displayName: Service account for fhir manager
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccountKey
metadata:
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test
spec:
  keyAlgorithm: KEY_ALG_RSA_2048
  privateKeyType: TYPE_GOOGLE_CREDENTIALS_FILE
  publicKeyType: TYPE_X509_PEM_FILE
  serviceAccountRef:
    name: fhir-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: fhir-manager
rules:
- apiGroups:
  - fhir.imaware.com
  resources:
  - fhirresources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fhir.imaware.com
  resources:
  - fhirresources/finalizers
  verbs:
  - update
- apiGroups:
  - fhir.imaware.com
  resources:
  - fhirresources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - fhir.imaware.com
  resources:
  - fhirstores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fhir.imaware.com
  resources:
  - fhirstores/finalizers
  verbs:
  - update
- apiGroups:
  - fhir.imaware.com
  resources:
  - fhirstores/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fhir-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fhir-manager
subjects:
- kind: ServiceAccount
  name: fhir-manager
  namespace: ethan-test
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
    kubernetes.io/description: >-
      This policy grants the minimum amount of privilege necessary to run
      non-privileged kube-system pods. This policy is not intended for use
      outside of kube-system, and may include further restrictions in the
      future.
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default,docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager.psp
spec:
  allowPrivilegeEscalation: false
  allowedCapabilities:
    - SETPCAP
    - MKNOD
    - AUDIT_WRITE
    - CHOWN
    - NET_RAW
    - NET_ADMIN
    - DAC_OVERRIDE
    - FOWNER
    - FSETID
    - KILL
    - SETGID
    - SETUID
    - NET_BIND_SERVICE
    - CAP_NET_ADMIN
    - SYS_CHROOT
    - SETFCAP
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
    - emptyDir
    - csi
    - configMap
    - secret
    - projected
    - downwardAPI
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test
rules:
  - apiGroups:
      - policy
    resourceNames:
      - fhir-manager.psp
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fhir-manager
subjects:
  - kind: ServiceAccount
    name: fhir-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: fhir-manager@imaware-test.iam.gserviceaccount.com
  labels:
    app.kubernetes.io/instance: fhir-manager
  name: fhir-manager
  namespace: ethan-test